<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADcAAAA3CAYAAACo29JGAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAADL1JREFUaEPNWglUldUW3qY+x8xwLmWZvpybzazUJMksS1MrxSHNSs0sJ0QQuJdZ
        JgUF5wEFBGUQUVFxHnHICcdSKy3rKeaq9ZZaNrzvrW//9yLeC1xQJPdae9117/3/c/b3732+s/f+j0hZ
        i1nqi7+4iL9MED9ZKn6yX8zyk5jkdzEJ9JPf+Tv/53W8nvfdl2KWf0ugeEiA7BGz/C6BAvEXiK9AvAXi
        o6BuKb9T+T+v4/W8j/dzHI73j4tZukqgpIm/3JQgi8FmQeuZreGW6oagHUFIyE3AujPrsO27bdh5fie2
        frsVWV9nIeFoAkJ2hGBI+hC0i22HCn4VjPs5DsfjuBy/3MUs7SVQ1qohZgNUx3kdEbYzDHsu7MH5X86r
        Hrt8DLsu7ELWmSyknUzDsmPLEJ8bj8RjiUg9mYr1Z9djz/d7cOinQwo6cnckOi/obHiU43J8zsP57rmM
        l2oSKJESIP/TyX0FA1MGYss3W/Djf3/E1z9/jS3fbsGKEysQdyQOCw8txLyD8zD7wGzM2DcD03KmIWx3
        GAJ3BMJ3qy8mbZyEsevH4ov1X8C8zayg9/6wF9lnszF85XBUNFU0QHI+zsv574lMkWclUHIlRCCegl4J
        vbDvh33Iu56H/Rf3I/1UOpKPJyPpWJKG4uIjizH/4HzMOjAL0fuiEZkTidBdoQrMtM2EKVumKLjxG8Zj
        zLox+GT1JxiYNhDvpbyHyZsmY+O5jdh1fhf6L++v8+m8nJ92lKmYZYAEyQ2SQf2Q+lh+fDl+/f1XHLh4
        QMONIUZv8ckvObpEPTbnyzmYuX8mpudMR/jucATvDIbfdj/4bPFR4ydmT1SPjV47WoF9uOpDDE4fjAGp
        A9ArqRe6xnXFyDUjsev7Xcg4lYHGoY2NcKUdtKdMxCxfyFTDW66LXXH+1/P47pfvsOr0qnxg9Fb80Xgs
        OrxIwzD2QCyi90YjYk8Epu6aioDtARqGXpu91Fvj1o/DZ1mfqfEfZX6ED1Z+ALc0N/Van+Q+eGvZW+iR
        0AMvL3oZT895Wr198spJ9E7obXiR9tCuuxKTjJVQgXgIRmWOwrU/riHn+xyknEhB+sl09SBDkOtrwaEF
        dmuLbMm15L3FW701YcMEfL7uc3y69lN8vPpjDMsYhkHpg9A/pT/6Le+nHnsj8Q28Fv8aui7pik6LOuGF
        BS/gsejH0D2+O3Iv58J9g7vao3bRvjsSb3HTJ+Qh8Mj2wG9//ob1Z9YrMCqZb+nRpeqtuV/ORcz+GETt
        jUL4nnCE7AyB/3Z/+Gz1gecmz1shmDUaI1aPuC0E313xLt5Jfgc9l/VUAK8ueRVdFnfBiwtfRPv57dVz
        7Wa3w6PTHkXTqKbYcX4HArcHGgBpH+0slfjIMxIkN2WyYMzaMbjx5w0NQ64rq7ccEQa9RVCj1o7S0Bua
        MTSfMAiGofd6wusKqkdiD7gudcUrca9oKHaY3wHPzn0WT8x+Aq1iW6H5jOYKrG5YXdQMromN32yE1yYv
        0D61k/aWSKZJNfGTM1y8PRN64vof15F5OhNJx5PUW0uOlIwwuKboyZN5J3Ei7wSOXz6OY5eOIfdSLo78
        5wgO/3RY9zeGJQF1WtwJHRd0xHPznsNTc55C21lt0SKmBZrNaAbn6c5oFNlIwVUJrIJq/tWUaAakDDA2
        ftpLux2KSWIkWOAc4YxL1y4h+1y2ksVthLE/Vg0vjjCGrRqmnnUkvO6Zuc/g+fnP5wNrHdsazaKbaSgS
        UK2QWqgWVA3/CvgXKvlXgkwRNAxtqA+qRXQL0F61u1gJkOc0z/MSbDi3QZ8wvVQSwvDY5HEbYZD9Zu6b
        aYvFThiqXFNPzn5SAdULr4caQTUMENzAC+akVP5GnSR4M/FNbP52s5G/0m7aX6SYZDsHIItxc6aXiiMM
        estzsyfcs9010yhIGH2W99GH4EhoYO3g2qgSUMUwnnuZLZCidKKofXyglvu220IyxFdcmMvVDKypaVTa
        qTRdV/mEsccmw9h8e4Yxao2FOFYaxEGjeb0jaR3T2iCGkoCxVW9BvdB62HdxHx4OedjIRYnDTkyygehp
        8NmrZ/WpWwmDIaiEsc0mw1h3K8Pg2rHSe78V/ZTS+SAcSZvYNroM7AwvqU4UXRqMJIv3NtwOLEAeFz/5
        u2pAVWU0Zu4EVxxhWDOM4auGF5phvLTwJZi2mmyx2Mldg/MROE110v2vZlBNMuffiidfzGJi0Ujj6DU+
        cUeEwQyDe9egNCPD6Lu8b36G4RrvqszH5NiR3DU46kTR5cPo0eKXePLFJIfpUmYemV9lavjlZxibjQzD
        ljCKyzA6L+6sGzDXoyMpE3Beovsk7beE5mEDWLA0EF/5yyncSYtLhiFD0EoY4zaMw5isW4TBECRhvJ/y
        vjLi20lva5JbMMNg6lQ7pLaCdiRlAs4kqGiuqMVvg2kNCPAvxSVm6U5X8skfvXRUQ0+T3OwJShgMQSWM
        DIMw+qf2V8LondRbGZFJrssSFyPDWNgRHRZ0QMOIhhB30TB1JGUCjupuhCYjyRKa3QnOk38yDImcRHEb
        YWRaCCPVTR+AZuxxXdVDzNhtc8CK/hV1g5XPRa91JE2mN4GMF2M7KIkW9SA8RCOLkWf5zZPrLZlfWEVz
        syYgJYzMW4TBEOQToUeZ5btvdNf1pFtB1mi9h2uRYdplURe4xLnAZZ4LfLf42mKxE0aEywIX9X5JtP28
        9oXviVNEHzbzX/HTUE02yCRANNPm5kz0toRBau+7oq8m0f+0nMo7datVWBCcj6BRRCOtXioEVrCQio9c
        qR5SHTsv7NRQHLJyiB1hkCwYkldvXLWdq9yFlUSh4EyiFQPB1QqtxWuusCj9k8nq7gu7FZhWxSSM5FuE
        QWrn3vXz9Z9t5yp3OfjjwSLBUVeeWqnlEXHRc+pOes62kOy2tBu6xHXRcoQAr1y/YjtXuUux4HxFu3BN
        pjUx9jsirB9eX9MXekv3rHhX7WFYGZHlCD/vB3DFhaW953wlr8bUGtpMtbbU6CXuWWQm9jBYEbOIzLuW
        ZztXuUtx4G5bc76SZ7BloGg/n2FJD7GHwerYun85RzmjVUwrXL522XaucpciwRXKlpZ9jr1H7lXsXdBL
        bWa1weMzH0fT6KZoENFAexk3/7ppO1e5y7mr5woHV+g+Z8lQWK+xCmAzpmVMS6MxE+WMRyIfQZ2wOqpk
        U5Y43Nwd6oqh2pJwJCyjhqYWcn8RSrKzA0b1EE08bs9QLLklSxZmKU5hTtpGazytsXrMKdQJD4Y8qPGs
        3V72C5leOdIxgm5LutlisRM+PBlbyP1FKVMwW2DUQnNLS1VQP7K+kgpzPYJi1+mhqQ+helB1VA6ojArm
        CvYDFqcech9UBQXqOfb9eyX30hYam59s2jzg94D9YCXR8gTnJcrw9vUcxVKJM4llr5EXs7VWam8V1PIE
        Z63EMwqrxC09FHqLr3brhNbJfwV8x1pe4HxE7WUSwn6nfQ+FYul+sa5j34RPw26g0mh5gZso2hZhK7/w
        7hfF0rdk/499wLqhdY1Oru1gJdXyAGfbt2RbvdC+JYUdW1/R100LDy+8O++VBzh2nI8s0qZw8R1nivVd
        gbfotsCSR/cW7vi2AzvSewmO9kwy+j4lf1dAsbzlaRndUrthDac2LP3k1HsJzkvQKLSR2tciqqRveSjW
        93M+ou+/WOdV8qlU+vXnIZotOJJ2s9qVDpy3oLJPZX0/x8K6dO/nKAXerHpv9saaM2sMA0oD0FO0QcuX
        jsVp8+jmmvTa3V+Ycn4vwdozazFl05Q7eLNqFes78cmC4B3ByDqbhSq+lvyyNGuQC704tb2+MOV8noKq
        vlWx7uw6BG0PMoDd0TtxqxQ4zTA5ezJyfshB88jmmqTaGVCUWt+1FaW21xem7qLz5lzM0cMHmrzf1WkG
        qxQ4h9J3WV/tSg9NG2qwaEnD6U6V408SDEsfpvP2SexThudQrGI9QeQrcA531gMAqSdS0Sa6jeHFsgbJ
        8dwFbWe01XlYXTcJszR9yvQEkVVszn4NThmsJ+1i9sag3cx2RqhwHZR0Hdkq7+MYHqLjxe6L1fEHpQy6
        x2e/rGJzaq+yuTJGZo7Emq/WIPFoIgalDkLDsIaGMdbCkl6wHhy1Kr/zd/7P6zxF7xucOljH4XgjV41E
        JbPlpf89P7VXUGzPW5oErnGuiM6JxurTq5GUmwT/rf66T3ac31FPKbB9yKqen/zO391S3BCwNQDJucl6
        X1ROFLrFdbtFNOV63tJW/OUV25OylQIqof3c9hiROQIRuyOw9MhSXTfsJ2acztBPfufv/J/X8Xrepx4t
        eFKW4//jUtwZZyOh1WO+WgDzuK+lO6x6355xLkzuo9Pp/wdFnj9rbN8a1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>